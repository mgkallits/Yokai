###################
### KEYBINDINGS ###
###################


# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = super # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, RETURN, exec, $terminal
bind = $mainMod, Q, killactive,
bind = $mainMod_SHIFT, ESC, exit,
bind = $mainMod, G, exec, uwsm app -- pkill waybar || uwsm app -- waybar
bind = $mainMod, F, exec, uwsm app -- $fileManager
bind = $mainMod, B, exec, uwsm app -- $browser
bind = $mainMod, K, exec, uwsm app -- $passward
bind = $mainMod, C, exec, uwsm app -- code
bind = $mainMod, E, exec, uwsm app -- emacsclient --create-frame --alternate-editor=emacs --quiet
bind = $mainMod, V, togglefloating,
bind = $mainMod, SPACE, exec, $menu | hyprctl dispatch focusmonitor -1
bind = $mainMod, SPACE, execr, wofi-close-on-focus-loss.sh

bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle


# Selfhosted services:
bind = $mainMod_SHIFT, H, exec, $browser --app=https://pihole.mgkallits.xyz/admin
bind = $mainMod_SHIFT, P, exec, $browser --app=https://portainer.mgkallits.xyz
bind = $mainMod_SHIFT, L, exec, $browser --app=https://linkwarden.mgkallits.xyz
bind = $mainMod, A, exec, $browser --app=https://open-webui.mgkallits.xyz
bind = $mainMod, D, exec, $browser --app=https://chat.deepseek.com/






# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, :s
bind = $mainMod SHIFT, S, movetoworkspace, special::s

bind = $mainMod, T, togglespecialworkspace, :t
bind = $mainMod SHIFT, T, movetoworkspace, special::t

bind = $mainMod, M, togglespecialworkspace, :m
bind = $mainMod SHIFT, M, movetoworkspace, special::m

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous





# Enter the "quick-launch" submap
bind = $mainMod, X, submap, quick-launch

# Define keybindings for the "quick-launch" submap
submap = quick-launch
    bindd = , t, open alacritty, exec, alacritty & hyprctl -q dispatch submap reset
    bindd = , b, open bitwarden, exec, bitwarden & hyprctl -q dispatch submap reset

    bind = , escape, submap, reset # Exit the submap without doing anything
submap = reset